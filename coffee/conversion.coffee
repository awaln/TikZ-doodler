###*
# Created by awaln on 4/15/15.
###

# converts drawing from an object with items to TikZ latex.

@compile = (convert_to, drawing) ->
  # if LaTeX, make it
  if convert_to == 'LaTeX'
    headers = '\\usepackage{tikz}\n'
    code = '\\begin{tikzpicture}[scale = 1]\n'

    # look at the edges first, relate to nodes if possible
    for edge in drawing['edges']
      relations = {start:[], end:[]}
      for name in Object.keys(drawing['nodes'])
        node = drawing.nodes[name]
        # check for start node overlap
        if node.type == 'circle' and distance_formula(node.center_x, node.center_y, edge['start'][0], edge['start'][1]) < node.radius
          relations['start'].push(node.name)
        if node.type == 'circle' and distance_formula(node.center_x, node.center_y, edge['end'][0], edge['end'][1]) < node.radius
          relations['end'].push(node.name)
      if relations['start'].length > 0 and relations['end'].length > 0
        relations['name'] = "Edge " + drawing['relations'].length
        drawing['relations'].push relations

    # TODO: Study relations and decide on a template to use

    # place nodes
    for name in Object.keys(drawing.nodes)
      node = drawing.nodes[name]
      code += '\\node[style=circle,draw, minimum size = ' + node.radius + 'pt] (' + node.name + ') at (' + node.center_x + 'pt, -' + node.center_y + 'pt) {' + node.name + '};\n'

    # place edges
    code += "\\path\n"
    for relation in drawing.relations
      code += '(' + relation.start[0] + ') edge node {'+ relation.name + '} (' + relation.end[0] + ')\n'
    code += ";"

    # add necessary headers
    document.getElementById('tex_includes').value = headers
    # add code
    code += '\\end{tikzpicture}\n'
    document.getElementById('tex_tex').value = code
  return

# ---
# generated by js2coffee 2.0.3