DRAW_COLOR = 'black'
DATE = new Date
current_stroke_x = []
current_stroke_y = []
canvas = undefined
ctx = undefined
flag = false
prevX = 0
currX = 0
prevY = 0
currY = 0
dot_flag = false
x = 'black'
y = 2

@init = ->
  canvas = document.getElementById('can')
  ctx = canvas.getContext('2d')
  w = canvas.width
  h = canvas.height
  # mouse listeners
  canvas.addEventListener 'mousemove', ((e) ->
    findxy 'move', e
    return
  ), false
  canvas.addEventListener 'mousedown', ((e) ->
    findxy 'down', e
    return
  ), false
  canvas.addEventListener 'mouseup', ((e) ->
    findxy 'up', e
    return
  ), false
  canvas.addEventListener 'mouseout', ((e) ->
    findxy 'out', e
    return
  ), false
  # touch listeners
  canvas.addEventListener 'touchmove', ((e) ->
    findxy 'move', e.changedTouches[0]
    #e.preventDefault();
    return
  ), false
  canvas.addEventListener 'touchstart', ((e) ->
    findxy 'down', e.changedTouches[0]
    e.preventDefault()
    return
  ), false
  canvas.addEventListener 'touchend', ((e) ->
    findxy 'up', e.changedTouches[0]
    e.preventDefault()
    return
  ), false
  canvas.addEventListener 'touchleave', ((e) ->
    findxy 'out', e.changedTouches[0]
    e.preventDefault()
    return
  ), false
  canvas.addEventListener 'touchcancel', ((e) ->
    findxy 'out', e.changedTouches[0]
    e.preventDefault()
    return
  ), false
  return

draw = ->
  ctx.beginPath()
  ctx.moveTo prevX, prevY
  ctx.lineTo currX, currY
  ctx.strokeStyle = x
  ctx.lineWidth = y
  ctx.fillStyle = 'white'
  ctx.stroke()
  ctx.closePath()
  current_stroke_x.push currX
  current_stroke_y.push currY
  return

findxy = (res, e) ->
  if res == 'down'
    prevX = currX
    prevY = currY
    currX = e.clientX - canvas.offsetLeft
    currY = e.clientY - canvas.offsetTop
    flag = true
    dot_flag = true
    if dot_flag
      ctx.beginPath()
      ctx.fillStyle = x
      ctx.fillRect currX, currY, 2, 2
      ctx.closePath()
      dot_flag = false
  if res == 'up' or res == 'out'
    flag = false
    if current_stroke_x.length > 0
      recognize(current_stroke_x, current_stroke_y, ctx, canvas);
      current_stroke_x = []
      current_stroke_y = []
  if res == 'move'
    if flag
      prevX = currX
      prevY = currY
      currX = e.clientX - canvas.offsetLeft
      currY = e.clientY - canvas.offsetTop
      draw()
  return

# ---
# generated by js2coffee 2.0.3